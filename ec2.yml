---
- hosts: localhost
  connection: local
  gather_facts: true
  vars:
    AZ_DIST: "{{ ansible_lsb.codename }}"
    sysctl_rhel_config:
      kernel.exec-shield: 1
      net.ipv4.tcp_syncookies: 1
    git_install_from_source_dependencies:
    - gcc
  pre_tasks:
  - name: Upgrade via apt
    become: yes
    become_user: root
    apt:
      upgrade: dist
      update_cache: yes

  - name: Install azure cli
    become: yes
    become_user: root
    include: install-azure-cli.yml

  - name: Install Steampipe
    become: yes
    become_user: root
    ansible.builtin.shell: |
      /bin/sh -c "$(curl -fsSL https://steampipe.io/install/steampipe.sh)"

  - name: Install Powerpipe
    become: yes
    become_user: root
    ansible.builtin.shell: |
      /bin/sh -c "$(curl -fsSL https://powerpipe.io/install/powerpipe.sh)"

  - name: Install zsh
    apt:
      name: zsh
    become: yes

  - name: Install gh-cli
    become: yes
    become_user: root
    include: install-gh-cli.yml

  - name: Check if docker-ce is installed
    shell: dpkg -l | grep -E '^ii' | grep docker-ce
    register: docker_installed
    ignore_errors: yes

  - name: Install docker-ce
    include: install-docker.yml
    when: docker_installed.rc != 0

  - name: Make sure the docker cli plugin directory exists
    ansible.builtin.file:
      path: "{{ lookup('env','HOME') }}/.docker/cli-plugins/"
      state: directory
      mode: '0755'

  - name: Install docker-compose cli plugin
    get_url:
      url: https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-linux-x86_64
      dest: "{{ lookup('env','HOME') }}/.docker/cli-plugins/docker-compose"
      mode: '0755'

  - name: Install ngrok
    become: yes
    ansible.builtin.unarchive:
      src: https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz
      dest: /usr/local/bin
      remote_src: yes
      mode: '0755'

  - name: Check if keybase is installed
    shell: dpkg -l | grep -E '^ii' | grep keybase
    register: keybase_installed
    ignore_errors: yes

  - name: Install keybase
    include: install-keybase.yml
    when: keybase_installed.rc != 0

  - name: Install various packages via apt
    become: yes
    apt:
      name: '{{ item }}'
    with_items: '{{ apt_things_to_install }}'

  - name: Setup yubikey u2f
    become: yes
    get_url:
      url: https://raw.githubusercontent.com/Yubico/libu2f-host/master/70-u2f.rules
      dest: /etc/udev/rules.d/70-u2f.rules
      checksum: sha1:8ed233dc60fe89569410907f1b830945853af2bb

  - name: set timezone to America/Toronto
    become: yes
    timezone:
      name: America/Toronto

  roles:
  - {role: jnv.unattended-upgrades, become: yes}
  - {role: geerlingguy.nfs, become: yes}
  - {role: geerlingguy.ntp, become: yes}
  - {role: badpacketsllc.aws_cli, become: yes}
  - {role: diodonfrost.terraform, become: yes}
